{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\APP\\\\client\\\\src\\\\features\\\\note\\\\components\\\\NoteItem.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, ButtonGroup, Dialog, DialogActions, DialogContent, DialogTitle, Divider, makeStyles, Paper, Typography } from '@material-ui/core';\nimport moment from 'moment';\nimport React, { useEffect, useState } from 'react';\nimport { getNoteColor } from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    maxWidth: 360,\n    minHeight: 250,\n    backgroundColor: theme.palette.background.paper\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  section1: {\n    padding: theme.spacing(2, 2)\n  },\n  section2: {\n    margin: theme.spacing(2)\n  },\n  section3: {\n    margin: theme.spacing(1, 1, 1),\n    float: 'right'\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\nexport default function NoteItem({\n  note\n}) {\n  _s();\n\n  const [isUsed, setIsUsed] = useState(0);\n  const classes = useStyles();\n  const [openContent, setOpenContent] = useState(false);\n\n  const handleCloseContent = () => {\n    setOpenContent(false);\n  };\n\n  useEffect(() => {\n    const isUsed = new Date(note.completedAt).valueOf() - new Date().valueOf();\n  }, []); //   const [status, setStatus] = React.useState('')\n  //   const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\n  //     setStatus(event.target.value as string)\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    elevation: 3,\n    className: classes.root,\n    color: \"red\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      color: getNoteColor(isUsed),\n      className: classes.section1,\n      onClick: () => setOpenContent(true),\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h4\",\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.section1,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"textPrimary\",\n        variant: \"body1\",\n        children: [\"Completed: \", moment(note.completedAt).format('MMM DD, YYYY')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      color: getNoteColor(isUsed),\n      className: classes.section2,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"body1\",\n        children: note.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.section3,\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [isUsed > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          color: \"secondary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openContent,\n      onClose: handleCloseContent,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          color: getNoteColor(isUsed),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h4\",\n            children: note.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"textPrimary\",\n          variant: \"body1\",\n          children: moment(note.completedAt).format('HH:MM MMM DD, YYYY')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: note.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseContent,\n          color: \"secondary\",\n          variant: \"outlined\",\n          autoFocus: true,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NoteItem, \"92QdP7D3GzcTqouu3m26PJiy0BY=\", false, function () {\n  return [useStyles];\n});\n\n_c = NoteItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteItem\");","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/note/components/NoteItem.tsx"],"names":["Box","Button","ButtonGroup","Dialog","DialogActions","DialogContent","DialogTitle","Divider","makeStyles","Paper","Typography","moment","React","useEffect","useState","getNoteColor","useStyles","theme","root","width","height","maxWidth","minHeight","backgroundColor","palette","background","paper","chip","margin","spacing","section1","padding","section2","section3","float","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","NoteItem","note","isUsed","setIsUsed","classes","openContent","setOpenContent","handleCloseContent","Date","completedAt","valueOf","title","format","status","content"],"mappings":"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","sourcesContent":["import {\r\n  Box,\r\n  Button,\r\n  ButtonGroup,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Divider,\r\n  makeStyles,\r\n  Paper,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport { Note } from 'models'\r\nimport moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { getNoteColor } from 'utils'\r\n\r\nexport interface NoteItemProps {\r\n  note: Note\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    maxWidth: 360,\r\n    minHeight: 250,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  section1: {\r\n    padding: theme.spacing(2, 2),\r\n  },\r\n  section2: {\r\n    margin: theme.spacing(2),\r\n  },\r\n  section3: {\r\n    margin: theme.spacing(1, 1, 1),\r\n    float: 'right',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}))\r\n\r\nexport default function NoteItem({ note }: NoteItemProps) {\r\n  const [isUsed, setIsUsed] = useState(0)\r\n  const classes = useStyles()\r\n  const [openContent, setOpenContent] = useState(false)\r\n  const handleCloseContent = () => {\r\n    setOpenContent(false)\r\n  }\r\n  useEffect(() => {\r\n    const isUsed = new Date(note.completedAt).valueOf() - new Date().valueOf()\r\n  }, [])\r\n  //   const [status, setStatus] = React.useState('')\r\n\r\n  //   const handleChangeSelect = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n  //     setStatus(event.target.value as string)\r\n  //   }\r\n\r\n  return (\r\n    <Paper elevation={3} className={classes.root} color=\"red\">\r\n      <Box\r\n        color={getNoteColor(isUsed)}\r\n        className={classes.section1}\r\n        onClick={() => setOpenContent(true)}\r\n      >\r\n        <Typography gutterBottom variant=\"h4\">\r\n          {note.title}\r\n        </Typography>\r\n      </Box>\r\n      <Divider variant=\"middle\" />\r\n      <Box className={classes.section1}>\r\n        <Typography color=\"textPrimary\" variant=\"body1\">\r\n          Completed: {moment(note.completedAt).format('MMM DD, YYYY')}\r\n        </Typography>\r\n      </Box>\r\n      <Divider variant=\"middle\" />\r\n      <Box color={getNoteColor(isUsed)} className={classes.section2}>\r\n        <Typography gutterBottom variant=\"body1\">\r\n          {note.status}\r\n        </Typography>\r\n        {/* <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={status}\r\n          onChange={handleChangeSelect}\r\n        >\r\n          <MenuItem value=\"NOT COMPLETED\">Not Completed</MenuItem>\r\n          <MenuItem value=\"COMPLETED\">Completed</MenuItem>\r\n        </Select> */}\r\n      </Box>\r\n      <Box className={classes.section3}>\r\n        <ButtonGroup>\r\n          {isUsed > 0 && (\r\n            <Button size=\"small\" variant=\"contained\" color=\"primary\">\r\n              Edit\r\n            </Button>\r\n          )}\r\n          <Button size=\"small\" variant=\"contained\" color=\"secondary\">\r\n            Delete\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n\r\n      <Dialog\r\n        open={openContent}\r\n        onClose={handleCloseContent}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        maxWidth=\"md\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          <Box color={getNoteColor(isUsed)}>\r\n            <Typography gutterBottom variant=\"h4\">\r\n              {note.title}\r\n            </Typography>\r\n          </Box>\r\n          <Typography color=\"textPrimary\" variant=\"body1\">\r\n            {moment(note.completedAt).format('HH:MM MMM DD, YYYY')}\r\n          </Typography>\r\n        </DialogTitle>\r\n        <DialogContent>{note.content}</DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseContent} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n            Cancel\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}