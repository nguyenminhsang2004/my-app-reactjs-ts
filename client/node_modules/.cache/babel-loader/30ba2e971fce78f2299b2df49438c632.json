{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\APP\\\\client\\\\src\\\\features\\\\dashboard\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Grid, LinearProgress, makeStyles } from '@material-ui/core';\nimport { Favorite, NoteOutlined, Person, PostAddOutlined } from '@material-ui/icons';\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\nimport React, { useEffect } from 'react';\nimport StatisticItem from './components/StatisticItem';\nimport { dashboardAction, selectDashboardLoading, selectDashboardStatistics } from './dashboardSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    position: 'relative',\n    paddingTop: theme.spacing(1)\n  },\n  loading: {\n    position: 'absolute',\n    top: theme.spacing(-1),\n    width: '100%'\n  }\n}));\nexport default function Dashboard() {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const loading = useAppSelector(selectDashboardLoading);\n  const statistics = useAppSelector(selectDashboardStatistics);\n  useEffect(() => {\n    dispatch(dashboardAction.fetchData());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [loading && /*#__PURE__*/_jsxDEV(LinearProgress, {\n      className: classes.loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(StatisticItem, {\n          icon: /*#__PURE__*/_jsxDEV(PostAddOutlined, {\n            fontSize: \"large\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 19\n          }, this),\n          label: \"Post Count\",\n          value: statistics.postCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(StatisticItem, {\n          icon: /*#__PURE__*/_jsxDEV(NoteOutlined, {\n            fontSize: \"large\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this),\n          label: \"Note Count\",\n          value: sa\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(StatisticItem, {\n          icon: /*#__PURE__*/_jsxDEV(Favorite, {\n            fontSize: \"large\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this),\n          label: \"Like Count\",\n          value: 2000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        lg: 3,\n        children: /*#__PURE__*/_jsxDEV(StatisticItem, {\n          icon: /*#__PURE__*/_jsxDEV(Person, {\n            fontSize: \"large\",\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 19\n          }, this),\n          label: \"Order\",\n          value: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"2oxA5FKftZLl7ugZYsNBQoCnJFc=\", false, function () {\n  return [useStyles, useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/dashboard/index.tsx"],"names":["Box","Grid","LinearProgress","makeStyles","Favorite","NoteOutlined","Person","PostAddOutlined","useAppDispatch","useAppSelector","React","useEffect","StatisticItem","dashboardAction","selectDashboardLoading","selectDashboardStatistics","useStyles","theme","root","position","paddingTop","spacing","loading","top","width","Dashboard","classes","dispatch","statistics","fetchData","postCount","sa"],"mappings":"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","sourcesContent":["import { Box, Grid, LinearProgress, makeStyles } from '@material-ui/core';\r\nimport { Favorite, NoteOutlined, Person, PostAddOutlined } from '@material-ui/icons';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport React, { useEffect } from 'react';\r\nimport StatisticItem from './components/StatisticItem';\r\nimport { dashboardAction, selectDashboardLoading, selectDashboardStatistics } from './dashboardSlice';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    position: 'relative',\r\n    paddingTop: theme.spacing(1),\r\n\r\n  },\r\n\r\n  loading: {\r\n    position: 'absolute',\r\n    top: theme.spacing(-1),\r\n    width: '100%',\r\n  }\r\n}))\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n\r\n  const dispatch = useAppDispatch()\r\n  const loading = useAppSelector(selectDashboardLoading)\r\n  const statistics = useAppSelector(selectDashboardStatistics)\r\n  useEffect(() => {\r\n    dispatch(dashboardAction.fetchData())    \r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {loading && <LinearProgress className={classes.loading}/>}\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<PostAddOutlined fontSize=\"large\" color=\"secondary\"/>}\r\n            label='Post Count'\r\n            value={statistics.postCount}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<NoteOutlined fontSize=\"large\" color=\"secondary\"/>}\r\n            label='Note Count'\r\n            value={sa}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<Favorite fontSize=\"large\" color=\"secondary\"/>}\r\n            label='Like Count'\r\n            value={2000}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} lg={3}>\r\n          <StatisticItem\r\n            icon={<Person fontSize=\"large\" color=\"secondary\"/>}\r\n            label='Order'\r\n            value={20}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}