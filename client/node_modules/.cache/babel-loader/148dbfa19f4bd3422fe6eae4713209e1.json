{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\App\\\\client\\\\src\\\\features\\\\auth\\\\components\\\\LoginForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Box, Button, CircularProgress } from '@material-ui/core';\nimport { useAppSelector } from 'app/hooks';\nimport { InputField } from 'components/FormFields';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport * as yup from \"yup\";\nimport { selectLogging } from '../authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  email: yup.string().email().required('Please enter email !!!'),\n  passWord: yup.string().required('Please enter pass word !!!')\n});\nexport default function LoginForm({\n  initialValue,\n  onSubmit\n}) {\n  _s();\n\n  const {\n    control,\n    handleSubmit\n  } = useForm({\n    defaultValues: initialValue,\n    resolver: yupResolver(schema)\n  });\n  const isLogging = useAppSelector(selectLogging);\n\n  const handleSubmitForm = formValue => {\n    try {\n      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(formValue);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleSubmitForm),\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        name: \"email\",\n        control: control,\n        label: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"passWord\",\n        control: control,\n        label: \"Pass word\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          size: \"medium\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: [isLogging && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 39\n          }, this), \" \\xA0 Login\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            textAlign: 'center'\n          },\n          mt: 1,\n          children: [\"or \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: 'none',\n              fontSize: '18px'\n            },\n            to: \"/register\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginForm, \"ifOXzXi8axKnEf7nGqMVd14hYK4=\", false, function () {\n  return [useForm, useAppSelector];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/REACTJS/App/client/src/features/auth/components/LoginForm.tsx"],"names":["yupResolver","Box","Button","CircularProgress","useAppSelector","InputField","React","useForm","Link","yup","selectLogging","schema","object","shape","email","string","required","passWord","LoginForm","initialValue","onSubmit","control","handleSubmit","defaultValues","resolver","isLogging","handleSubmitForm","formValue","error","console","log","textAlign","textDecoration","fontSize"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport { useAppSelector } from 'app/hooks';\r\nimport { InputField } from 'components/FormFields';\r\nimport { LoginPayLoad } from 'models';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from \"yup\";\r\nimport { selectLogging } from '../authSlice';\r\n\r\nexport interface LoginFormProps {\r\n    initialValue?: LoginPayLoad;\r\n    onSubmit?: (formValue: LoginPayLoad) => void;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    email: yup.string().email().required('Please enter email !!!'),\r\n    passWord: yup.string().required('Please enter pass word !!!')\r\n});\r\n\r\nexport default function LoginForm ({ initialValue, onSubmit }: LoginFormProps) {\r\n    const {\r\n        control, handleSubmit\r\n    } = useForm<LoginPayLoad>({\r\n        defaultValues: initialValue,\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const isLogging = useAppSelector(selectLogging);\r\n\r\n    const handleSubmitForm = (formValue: LoginPayLoad) => {\r\n        try {\r\n            onSubmit?.(formValue);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box>\r\n            <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n                <InputField name=\"email\" control={control} label=\"Email\" type=\"email\"/>\r\n                <InputField name=\"passWord\" control={control} label=\"Pass word\" type=\"password\" />\r\n                <Box mt={3}>\r\n                    <Button fullWidth type=\"submit\" size=\"medium\" variant=\"contained\" color=\"primary\">\r\n                        {isLogging && <CircularProgress size={20} color=\"secondary\"/>} &nbsp; Login\r\n                    </Button>\r\n                    <Box style={{textAlign: 'center'}} mt={1}>\r\n                        or <br/>\r\n                        <Link style={{textDecoration:'none', fontSize: '18px'}} to=\"/register\">Register</Link>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}