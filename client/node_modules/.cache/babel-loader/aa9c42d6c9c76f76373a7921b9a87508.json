{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\APP\\\\client\\\\src\\\\features\\\\posts\\\\pages\\\\AddEditPostPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Fab, makeStyles } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport postApi from 'api/postApi';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PostForm from '../components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\nexport default function AddEditPostPage() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState();\n  console.log(post);\n  const isEdit = Boolean(postId);\n  useEffect(() => {\n    if (!isEdit) return;\n\n    (async () => {\n      try {\n        const response = await postApi.getPostById(postId);\n\n        if (response.success) {\n          setPost(response.content.data);\n        } else {}\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [postId]);\n  const initialValue = {\n    title: '',\n    content: '',\n    author: '',\n    like: 0,\n    category: '',\n    imageUrl: '',\n    ...post\n  };\n\n  const handleSubmitForm = async formValue => {\n    if (isEdit) {\n      await postApi.update(formValue);\n    } else {\n      await postApi.add(formValue);\n    }\n\n    toast.success('Save post successfully.');\n    history.push('/home/post');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [(!isEdit || Boolean(post)) && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        isEdit: isEdit,\n        initialValue: initialValue,\n        onSubmit: handleSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        textDecoration: 'none'\n      },\n      to: \"/home/post\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.fab,\n        color: \"primary\",\n        size: \"large\",\n        variant: \"extended\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }, this), \" Back to post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddEditPostPage, \"iy782TxYJxIViPbI1G1neCXvZsk=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = AddEditPostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditPostPage\");","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/posts/pages/AddEditPostPage.tsx"],"names":["Box","Fab","makeStyles","ArrowBack","postApi","React","useEffect","useState","Link","useHistory","useParams","toast","PostForm","useStyles","theme","root","display","flexFlow","justifyContent","alignItems","fab","position","bottom","spacing","right","AddEditPostPage","classes","history","postId","post","setPost","console","log","isEdit","Boolean","response","getPostById","success","content","data","error","initialValue","title","author","like","category","imageUrl","handleSubmitForm","formValue","update","add","push","textDecoration"],"mappings":"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","sourcesContent":["import { Box, Fab, makeStyles } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport postApi from 'api/postApi';\r\nimport { DataResponse, Post } from 'models';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport PostForm from '../components/PostForm';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexFlow: 'row nowrap',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n  \r\n    fab:{\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    }\r\n}))\r\n\r\nexport default function AddEditPostPage () {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const { postId } = useParams<{postId: string}>();\r\n    const [post, setPost] = useState<Post>();\r\n    console.log(post);\r\n    const isEdit = Boolean(postId);\r\n\r\n    useEffect(() => {\r\n        if(!isEdit) return;\r\n        (async() => {\r\n            try {\r\n                const response: DataResponse<Post> = await postApi.getPostById(postId);\r\n                if(response.success){\r\n                    setPost(response.content.data);\r\n                }\r\n                else{\r\n                    \r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }            \r\n        })()\r\n    }, [postId]);\r\n\r\n    const initialValue: Post = {\r\n        title: '',\r\n        content: '',\r\n        author: '',\r\n        like: 0,\r\n        category: '',\r\n        imageUrl: '',\r\n        ...post,\r\n    } as Post\r\n\r\n    const handleSubmitForm = async (formValue: Post) => {\r\n        if(isEdit){\r\n            await postApi.update(formValue);\r\n        }\r\n        else{\r\n            await postApi.add(formValue);\r\n        }\r\n        toast.success('Save post successfully.');\r\n        history.push('/home/post');\r\n    }\r\n\r\n    return (\r\n        <Box className={classes.root}>\r\n\r\n            {(!isEdit || Boolean(post)) && (\r\n                <Box>\r\n                    <PostForm isEdit={isEdit} initialValue={initialValue} onSubmit={handleSubmitForm}/>                \r\n                </Box>\r\n            )}\r\n\r\n            <Link \r\n                style={{textDecoration:'none'}} \r\n                to='/home/post'\r\n            >\r\n                <Fab \r\n                    className={classes.fab} \r\n                    color=\"primary\" \r\n                    size=\"large\" \r\n                    variant=\"extended\"\r\n                > <ArrowBack/> Back to post\r\n                </Fab>\r\n            </Link>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}