{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\App\\\\client\\\\src\\\\components\\\\FormFields\\\\FileField.tsx\",\n    _s = $RefreshSig$();\n\nimport { FormHelperText, Input } from '@material-ui/core';\nimport React from 'react';\nimport { useController } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function FileField({\n  name,\n  control,\n  ...inputProps\n}) {\n  _s();\n\n  const {\n    field: {\n      value,\n      onBlur,\n      onChange,\n      ref\n    },\n    fieldState: {\n      invalid,\n      error\n    }\n  } = useController({\n    name,\n    control\n  });\n\n  const handleOnChange = e => {\n    console.log(e.target.file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      name: name,\n      type: \"file\",\n      onChange: handleOnChange(ev),\n      value: value,\n      onBlur: onBlur,\n      error: invalid,\n      inputProps: inputProps,\n      innerRef: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n      children: error === null || error === void 0 ? void 0 : error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(FileField, \"s8SRHMBN1qqtB4XimZbo46JnAGA=\", false, function () {\n  return [useController];\n});\n\n_c = FileField;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileField\");","map":{"version":3,"sources":["D:/REACTJS/App/client/src/components/FormFields/FileField.tsx"],"names":["FormHelperText","Input","React","useController","FileField","name","control","inputProps","field","value","onBlur","onChange","ref","fieldState","invalid","error","handleOnChange","e","console","log","target","file","ev","message"],"mappings":";;;AAAA,SAASA,cAAT,EAAyBC,KAAzB,QAAsC,mBAAtC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAkBC,aAAlB,QAAuC,iBAAvC;;;AAOA,OAAO,SAASC,SAAT,CAAoB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgB,KAAGC;AAAnB,CAApB,EAAoE;AAAA;;AACvE,QAAM;AACFC,IAAAA,KAAK,EAAE;AAACC,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,KADL;AAEFC,IAAAA,UAAU,EAAE;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV;AAFV,MAGFZ,aAAa,CAAC;AACdE,IAAAA,IADc;AAEdC,IAAAA;AAFc,GAAD,CAHjB;;AAQA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,IAArB;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,KAAD;AACI,MAAA,IAAI,EAAEhB,IADV;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,QAAQ,EAAEW,cAAc,CAACM,EAAD,CAH5B;AAII,MAAA,KAAK,EAAEb,KAJX;AAKI,MAAA,MAAM,EAAEC,MALZ;AAMI,MAAA,KAAK,EAAEI,OANX;AAOI,MAAA,UAAU,EAAEP,UAPhB;AAQI,MAAA,QAAQ,EAAEK;AARd;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,cAAD;AAAA,gBAAiBG,KAAjB,aAAiBA,KAAjB,uBAAiBA,KAAK,CAAEQ;AAAxB;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA,kBADJ;AAeH;;GA5BenB,S;UAIRD,a;;;KAJQC,S","sourcesContent":["import { FormHelperText, Input } from '@material-ui/core';\r\nimport { InputHTMLAttributes } from 'hoist-non-react-statics/node_modules/@types/react';\r\nimport React from 'react';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\nexport interface FileFieldProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    name: string;\r\n    control: Control<any>;\r\n}\r\n\r\nexport function FileField ({name, control, ...inputProps}: FileFieldProps) {\r\n    const {\r\n        field: {value, onBlur, onChange, ref},\r\n        fieldState: {invalid, error}\r\n    } = useController({\r\n        name,\r\n        control\r\n    });\r\n\r\n    const handleOnChange = (e) => {\r\n        console.log(e.target.file);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Input \r\n                name={name} \r\n                type=\"file\"\r\n                onChange={handleOnChange(ev)}\r\n                value={value}\r\n                onBlur={onBlur}\r\n                error={invalid}\r\n                inputProps={inputProps}\r\n                innerRef={ref}\r\n            />\r\n            <FormHelperText>{error?.message}</FormHelperText>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}