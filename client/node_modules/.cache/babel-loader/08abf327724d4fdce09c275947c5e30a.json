{"ast":null,"code":"import { call, put, takeLatest } from '@redux-saga/core/effects';\nimport noteApi from 'api/noteApi';\nimport { toast } from 'react-toastify';\nimport { noteAction } from './noteSlice';\n\nfunction* fetchNoteList() {\n  try {\n    const response = yield call(noteApi.getAll);\n\n    if (response.success) {\n      yield put(noteAction.fetchNoteListSuccess(response));\n    } else {\n      toast.error(response.content.message);\n      yield put(noteAction.fetchNoteListFailed(response.content.message));\n    }\n  } catch (error) {\n    console.log(error);\n    yield put(noteAction.fetchNoteListFailed('Failed to load data'));\n  }\n}\n\nexport default function* noteSaga() {\n  yield takeLatest(noteAction.fetchNoteList.type, fetchNoteList);\n}","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/note/noteSaga.ts"],"names":["call","put","takeLatest","noteApi","toast","noteAction","fetchNoteList","response","getAll","success","fetchNoteListSuccess","error","content","message","fetchNoteListFailed","console","log","noteSaga","type"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,0BAAtC;AACA,OAAOC,OAAP,MAAoB,aAApB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;;AAEA,UAAUC,aAAV,GAA0B;AACxB,MAAI;AACF,UAAMC,QAA4B,GAAG,MAAMP,IAAI,CAACG,OAAO,CAACK,MAAT,CAA/C;;AACA,QAAID,QAAQ,CAACE,OAAb,EAAsB;AACpB,YAAMR,GAAG,CAACI,UAAU,CAACK,oBAAX,CAAgCH,QAAhC,CAAD,CAAT;AACD,KAFD,MAEO;AACLH,MAAAA,KAAK,CAACO,KAAN,CAAYJ,QAAQ,CAACK,OAAT,CAAiBC,OAA7B;AACA,YAAMZ,GAAG,CAACI,UAAU,CAACS,mBAAX,CAA+BP,QAAQ,CAACK,OAAT,CAAiBC,OAAhD,CAAD,CAAT;AACD;AACF,GARD,CAQE,OAAOF,KAAP,EAAc;AACdI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,UAAMV,GAAG,CAACI,UAAU,CAACS,mBAAX,CAA+B,qBAA/B,CAAD,CAAT;AACD;AACF;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMf,UAAU,CAACG,UAAU,CAACC,aAAX,CAAyBY,IAA1B,EAAgCZ,aAAhC,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from '@redux-saga/core/effects'\r\nimport noteApi from 'api/noteApi'\r\nimport { ListResponse, Note } from 'models'\r\nimport { toast } from 'react-toastify'\r\nimport { noteAction } from './noteSlice'\r\n\r\nfunction* fetchNoteList() {\r\n  try {\r\n    const response: ListResponse<Note> = yield call(noteApi.getAll)\r\n    if (response.success) {\r\n      yield put(noteAction.fetchNoteListSuccess(response))\r\n    } else {\r\n      toast.error(response.content.message)\r\n      yield put(noteAction.fetchNoteListFailed(response.content.message))\r\n    }\r\n  } catch (error) {\r\n    console.log(error)\r\n    yield put(noteAction.fetchNoteListFailed('Failed to load data'))\r\n  }\r\n}\r\n\r\nexport default function* noteSaga() {\r\n  yield takeLatest(noteAction.fetchNoteList.type, fetchNoteList)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}