{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  loading: false,\n  statistics: {\n    postCount: 0,\n    noteCount: 0,\n    likeCount: 0,\n    other: 0\n  },\n  highestPostList: [],\n  noteList: []\n};\nconst dashboardSlice = createSlice({\n  name: 'dashboard',\n  initialState,\n  reducers: {\n    fetchData(state) {\n      state.loading = true;\n    },\n\n    fetchDataSuccess(state) {\n      state.loading = false;\n    },\n\n    fetchDataFailed(state, action) {\n      state.loading = false;\n    },\n\n    setStatistics(state, action) {\n      state.statistics = action.payload;\n    },\n\n    setHighestPostList(state, action) {\n      state.highestPostList = action.payload;\n    },\n\n    setNoteList(state, action) {\n      state.noteList = action.payload;\n    }\n\n  }\n}); // Actions\n\nexport const dashboardAction = dashboardSlice.actions; // Selector\n\nexport const selectDashboardStatistics = state => state.dashboard.statistics;\nexport const selectDashboardHighestPostList = state => state.dashboard.highestPostList;\nexport const selectDashboardNoteList = state => state.dashboard.noteList; // Reducer\n\nconst dashboardReducer = dashboardSlice.reducer;\nexport default dashboardReducer;","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/dashboard/dashboardSlice.ts"],"names":["createSlice","initialState","loading","statistics","postCount","noteCount","likeCount","other","highestPostList","noteList","dashboardSlice","name","reducers","fetchData","state","fetchDataSuccess","fetchDataFailed","action","setStatistics","payload","setHighestPostList","setNoteList","dashboardAction","actions","selectDashboardStatistics","dashboard","selectDashboardHighestPostList","selectDashboardNoteList","dashboardReducer","reducer"],"mappings":"AACA,SAASA,WAAT,QAA2C,kBAA3C;AAkBA,MAAMC,YAA4B,GAAG;AACjCC,EAAAA,OAAO,EAAE,KADwB;AAEjCC,EAAAA,UAAU,EAAE;AACRC,IAAAA,SAAS,EAAE,CADH;AAERC,IAAAA,SAAS,EAAE,CAFH;AAGRC,IAAAA,SAAS,EAAE,CAHH;AAIRC,IAAAA,KAAK,EAAE;AAJC,GAFqB;AAQjCC,EAAAA,eAAe,EAAE,EARgB;AASjCC,EAAAA,QAAQ,EAAE;AATuB,CAArC;AAYA,MAAMC,cAAc,GAAGV,WAAW,CAAC;AAC/BW,EAAAA,IAAI,EAAE,WADyB;AAE/BV,EAAAA,YAF+B;AAG/BW,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACZ,OAAN,GAAgB,IAAhB;AACH,KAHK;;AAINa,IAAAA,gBAAgB,CAACD,KAAD,EAAO;AACnBA,MAAAA,KAAK,CAACZ,OAAN,GAAgB,KAAhB;AAEH,KAPK;;AAQNc,IAAAA,eAAe,CAACF,KAAD,EAAQG,MAAR,EAAsC;AACjDH,MAAAA,KAAK,CAACZ,OAAN,GAAgB,KAAhB;AACH,KAVK;;AAYNgB,IAAAA,aAAa,CAACJ,KAAD,EAAQG,MAAR,EAAmD;AAC5DH,MAAAA,KAAK,CAACX,UAAN,GAAmBc,MAAM,CAACE,OAA1B;AACH,KAdK;;AAeNC,IAAAA,kBAAkB,CAACN,KAAD,EAAQG,MAAR,EAAsC;AACpDH,MAAAA,KAAK,CAACN,eAAN,GAAwBS,MAAM,CAACE,OAA/B;AACH,KAjBK;;AAkBNE,IAAAA,WAAW,CAACP,KAAD,EAAQG,MAAR,EAAsC;AAC7CH,MAAAA,KAAK,CAACL,QAAN,GAAiBQ,MAAM,CAACE,OAAxB;AAEH;;AArBK;AAHqB,CAAD,CAAlC,C,CA4BA;;AACA,OAAO,MAAMG,eAAe,GAAGZ,cAAc,CAACa,OAAvC,C,CAEP;;AACA,OAAO,MAAMC,yBAAyB,GAAIV,KAAD,IAAsBA,KAAK,CAACW,SAAN,CAAgBtB,UAAxE;AACP,OAAO,MAAMuB,8BAA8B,GAAIZ,KAAD,IAAsBA,KAAK,CAACW,SAAN,CAAgBjB,eAA7E;AACP,OAAO,MAAMmB,uBAAuB,GAAIb,KAAD,IAAsBA,KAAK,CAACW,SAAN,CAAgBhB,QAAtE,C,CAEP;;AACA,MAAMmB,gBAAgB,GAAGlB,cAAc,CAACmB,OAAxC;AACA,eAAeD,gBAAf","sourcesContent":["import { RootState } from 'app/store';\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Note } from 'models/note';\r\nimport { Post } from 'models/post';\r\n\r\nexport interface DashboardStatistics {\r\n    postCount: number;\r\n    noteCount: number;\r\n    likeCount: number;\r\n    other: number;\r\n}\r\n\r\nexport interface DashboardState {\r\n    loading: boolean;\r\n    statistics: DashboardStatistics;\r\n    highestPostList: Post[];\r\n    noteList: Note[];\r\n}\r\n\r\nconst initialState: DashboardState = {\r\n    loading: false,\r\n    statistics: {\r\n        postCount: 0,\r\n        noteCount: 0,\r\n        likeCount: 0,\r\n        other: 0,\r\n    },\r\n    highestPostList: [],\r\n    noteList: []\r\n}\r\n\r\nconst dashboardSlice = createSlice({\r\n    name: 'dashboard',\r\n    initialState,\r\n    reducers: {\r\n        fetchData(state){\r\n            state.loading = true;\r\n        },\r\n        fetchDataSuccess(state){\r\n            state.loading = false;\r\n\r\n        },\r\n        fetchDataFailed(state, action: PayloadAction<String>){\r\n            state.loading = false;\r\n        },\r\n\r\n        setStatistics(state, action: PayloadAction<DashboardStatistics>){\r\n            state.statistics = action.payload;\r\n        },\r\n        setHighestPostList(state, action: PayloadAction<Post[]>){\r\n            state.highestPostList = action.payload;\r\n        },\r\n        setNoteList(state, action: PayloadAction<Note[]>){\r\n            state.noteList = action.payload;\r\n\r\n        },\r\n    }\r\n});\r\n\r\n// Actions\r\nexport const dashboardAction = dashboardSlice.actions;\r\n\r\n// Selector\r\nexport const selectDashboardStatistics = (state: RootState) => state.dashboard.statistics;\r\nexport const selectDashboardHighestPostList = (state: RootState) => state.dashboard.highestPostList;\r\nexport const selectDashboardNoteList = (state: RootState) => state.dashboard.noteList;\r\n\r\n// Reducer\r\nconst dashboardReducer = dashboardSlice.reducer;\r\nexport default dashboardReducer;"]},"metadata":{},"sourceType":"module"}