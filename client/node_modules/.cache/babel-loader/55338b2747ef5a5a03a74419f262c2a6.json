{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\App\\\\client\\\\src\\\\features\\\\auth\\\\components\\\\RegisterForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Box, Button, CircularProgress } from '@material-ui/core';\nimport { useAppSelector } from 'app/hooks';\nimport { InputField, RadioGroupField } from 'components/FormFields';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport * as yup from \"yup\";\nimport { selectRegistering } from '../authSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({\n  fullName: yup.string().required('Please enter full name !!!'),\n  email: yup.string().email().required('Please enter email !!!'),\n  passWord: yup.string().trim().min(8, 'Pass word lasted 8 characters !!!').required('Please enter pass word !!!'),\n  gender: yup.string().oneOf(['male', 'female'], 'Please select either male or female !!!').required('Please select gender !!!'),\n  imageUrl: yup.string().required('Please enter image !!!')\n});\nexport default function RegisterForm({\n  initialValue,\n  onSubmit\n}) {\n  _s();\n\n  const {\n    control,\n    handleSubmit\n  } = useForm({\n    defaultValues: initialValue,\n    resolver: yupResolver(schema)\n  });\n  const isRegistering = useAppSelector(selectRegistering);\n\n  const handleSubmitForm = formValue => {\n    try {\n      onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(formValue);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: 700,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleSubmitForm),\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        name: \"fullName\",\n        control: control,\n        label: \"Full name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RadioGroupField, {\n        name: \"gender\",\n        control: control,\n        label: \"Gender\",\n        options: [{\n          label: 'Male',\n          value: 'male'\n        }, {\n          label: 'Female',\n          value: 'female'\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"email\",\n        control: control,\n        label: \"Email\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"passWord\",\n        control: control,\n        label: \"Pass word\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"imageUrl\",\n        control: control,\n        label: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          type: \"submit\",\n          size: \"medium\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: [isRegistering && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"secondary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 43\n          }, this), \" \\xA0 Register\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          style: {\n            textAlign: 'center'\n          },\n          mt: 1,\n          children: [\"or \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            style: {\n              textDecoration: 'none',\n              fontSize: '18px'\n            },\n            to: \"/login\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RegisterForm, \"mptSyfqfzFWh6SueXKniM5rdCH8=\", false, function () {\n  return [useForm, useAppSelector];\n});\n\n_c = RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["D:/REACTJS/App/client/src/features/auth/components/RegisterForm.tsx"],"names":["yupResolver","Box","Button","CircularProgress","useAppSelector","InputField","RadioGroupField","React","useForm","Link","yup","selectRegistering","schema","object","shape","fullName","string","required","email","passWord","trim","min","gender","oneOf","imageUrl","RegisterForm","initialValue","onSubmit","control","handleSubmit","defaultValues","resolver","isRegistering","handleSubmitForm","formValue","error","console","log","label","value","textAlign","textDecoration","fontSize"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Box, Button, CircularProgress } from '@material-ui/core';\r\nimport { useAppSelector } from 'app/hooks';\r\nimport { InputField, RadioGroupField } from 'components/FormFields';\r\nimport { User } from 'models';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Link } from 'react-router-dom';\r\nimport * as yup from \"yup\";\r\nimport { selectRegistering } from '../authSlice';\r\n\r\nexport interface RegisterFormProps {\r\n    initialValue?: User;\r\n    onSubmit?: (formValue: User) => void;\r\n}\r\n\r\nconst schema = yup.object().shape({\r\n    fullName: yup.string().required('Please enter full name !!!') ,\r\n    email: yup.string().email().required('Please enter email !!!'),\r\n    passWord: yup\r\n            .string()\r\n            .trim().min(8, 'Pass word lasted 8 characters !!!')\r\n            .required('Please enter pass word !!!'),\r\n    gender: yup\r\n            .string()\r\n            .oneOf(['male', 'female',], 'Please select either male or female !!!')\r\n            .required('Please select gender !!!'),\r\n    imageUrl: yup.string().required('Please enter image !!!')\r\n  });\r\n\r\nexport default function RegisterForm ({ initialValue, onSubmit }: RegisterFormProps) {\r\n    const {\r\n        control, handleSubmit\r\n    } = useForm<User>({\r\n        defaultValues: initialValue,\r\n        resolver: yupResolver(schema),\r\n    });\r\n\r\n    const isRegistering = useAppSelector(selectRegistering);\r\n\r\n    const handleSubmitForm = (formValue: User) => {\r\n        try {\r\n            onSubmit?.(formValue);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box maxWidth={700}>\r\n            <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n                <InputField name=\"fullName\" control={control} label=\"Full name\"/>\r\n                <RadioGroupField name=\"gender\" control={control} label=\"Gender\" options={[\r\n                    {label: 'Male', value: 'male'},\r\n                    {label: 'Female', value: 'female'}\r\n                ]}/>\r\n                <InputField name=\"email\" control={control} label=\"Email\" type=\"email\"/>\r\n                <InputField name=\"passWord\" control={control} label=\"Pass word\" type=\"password\" />\r\n                <InputField name=\"imageUrl\" control={control} label=\"Image\"/>\r\n                <Box mt={3}>\r\n                    <Button fullWidth type=\"submit\" size=\"medium\" variant=\"contained\" color=\"primary\">\r\n                        {isRegistering && <CircularProgress size={20} color=\"secondary\"/>} &nbsp; Register\r\n                    </Button>\r\n\r\n                    <Box style={{textAlign: 'center'}} mt={1}>\r\n                        or <br/>\r\n                        <Link style={{textDecoration:'none', fontSize: '18px'}} to=\"/login\">Login</Link>\r\n                    </Box>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}