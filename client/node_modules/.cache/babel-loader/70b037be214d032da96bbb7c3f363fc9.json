{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\App\\\\client\\\\src\\\\components\\\\FormFields\\\\InputField.tsx\",\n    _s = $RefreshSig$();\n\nimport { TextField } from '@material-ui/core';\nimport React from 'react';\nimport { useController } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputField({\n  name,\n  control,\n  label,\n  ...inputProps\n}) {\n  _s();\n\n  const {\n    field: {\n      value,\n      onBlur,\n      onChange,\n      ref\n    },\n    fieldState: {\n      invalid,\n      error\n    }\n  } = useController({\n    name,\n    control\n  });\n  return /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true,\n    margin: \"normal\",\n    label: label,\n    variant: \"outlined\",\n    onChange: onChange,\n    onBlur: onBlur,\n    value: value,\n    innerRef: ref,\n    error: invalid,\n    helperText: error === null || error === void 0 ? void 0 : error.message,\n    inputProps: inputProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(InputField, \"s8SRHMBN1qqtB4XimZbo46JnAGA=\", false, function () {\n  return [useController];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["D:/REACTJS/App/client/src/components/FormFields/InputField.tsx"],"names":["TextField","React","useController","InputField","name","control","label","inputProps","field","value","onBlur","onChange","ref","fieldState","invalid","error","message"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAkBC,aAAlB,QAAuC,iBAAvC;;AAQA,OAAO,SAASC,UAAT,CAAqB;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,KAAhB;AAAuB,KAAGC;AAA1B,CAArB,EAA6E;AAAA;;AAChF,QAAM;AACFC,IAAAA,KAAK,EAAE;AAACC,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B,KADL;AAEFC,IAAAA,UAAU,EAAE;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV;AAFV,MAGFb,aAAa,CAAC;AACdE,IAAAA,IADc;AAEdC,IAAAA;AAFc,GAAD,CAHjB;AAQA,sBACI,QAAC,SAAD;AACA,IAAA,SAAS,MADT;AAEA,IAAA,MAAM,EAAC,QAFP;AAGA,IAAA,KAAK,EAAEC,KAHP;AAIA,IAAA,OAAO,EAAC,UAJR;AAKA,IAAA,QAAQ,EAAEK,QALV;AAMA,IAAA,MAAM,EAAED,MANR;AAOA,IAAA,KAAK,EAAED,KAPP;AAQA,IAAA,QAAQ,EAAEG,GARV;AASA,IAAA,KAAK,EAAEE,OATP;AAUA,IAAA,UAAU,EAAEC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC,OAVnB;AAWA,IAAA,UAAU,EAAET;AAXZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAxBeJ,U;UAIRD,a;;;KAJQC,U","sourcesContent":["import { TextField } from '@material-ui/core';\r\nimport { InputHTMLAttributes } from 'hoist-non-react-statics/node_modules/@types/react';\r\nimport React from 'react';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\nexport interface InputFieldProps extends InputHTMLAttributes<HTMLInputElement> {\r\n    name: string;\r\n    control: Control<any>;\r\n    label?: string;\r\n}\r\n\r\nexport function InputField ({name, control, label, ...inputProps}: InputFieldProps) {\r\n    const {\r\n        field: {value, onBlur, onChange, ref},\r\n        fieldState: {invalid, error}\r\n    } = useController({\r\n        name,\r\n        control\r\n    });\r\n    \r\n    return (\r\n        <TextField \r\n        fullWidth \r\n        margin=\"normal\" \r\n        label={label} \r\n        variant=\"outlined\" \r\n        onChange={onChange}\r\n        onBlur={onBlur}\r\n        value={value}\r\n        innerRef={ref}\r\n        error={invalid}\r\n        helperText={error?.message}\r\n        inputProps={inputProps}\r\n        />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}