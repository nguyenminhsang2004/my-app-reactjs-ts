{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  loading: false,\n  list: []\n};\nconst categorySlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {\n    fetchCategoryList(state) {\n      state.loading = true;\n    },\n\n    fetchCategoryListSuccess(state, action) {\n      state.loading = true;\n      state.list = action.payload.content.data;\n    },\n\n    fetchCategoryListFailed(state, action) {\n      state.loading = false;\n    }\n\n  }\n}); // Actions\n\nexport const categoryAction = categorySlice.actions; // Selector\n\nexport const selectCategoryList = state => state.category.list; // Reducers\n\nconst categoryReducer = categorySlice.reducer;\nexport default categoryReducer;","map":{"version":3,"sources":["D:/REACTJS/App/client/src/features/category/categorySlice.ts"],"names":["createSlice","initialState","loading","list","categorySlice","name","reducers","fetchCategoryList","state","fetchCategoryListSuccess","action","payload","content","data","fetchCategoryListFailed","categoryAction","actions","selectCategoryList","category","categoryReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,MAAMC,YAA2B,GAAG;AAChCC,EAAAA,OAAO,EAAE,KADuB;AAEhCC,EAAAA,IAAI,EAAE;AAF0B,CAApC;AAKA,MAAMC,aAAa,GAAGJ,WAAW,CAAC;AAC9BK,EAAAA,IAAI,EAAE,UADwB;AAE9BJ,EAAAA,YAF8B;AAG9BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,iBAAiB,CAACC,KAAD,EAAO;AACpBA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACH,KAHK;;AAINO,IAAAA,wBAAwB,CAACD,KAAD,EAAQE,MAAR,EAAsD;AAC1EF,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAaO,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuBC,IAApC;AACH,KAPK;;AAQNC,IAAAA,uBAAuB,CAACN,KAAD,EAAQE,MAAR,EAAsC;AACzDF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACH;;AAVK;AAHoB,CAAD,CAAjC,C,CAiBA;;AACA,OAAO,MAAMa,cAAc,GAAGX,aAAa,CAACY,OAArC,C,CAEP;;AACA,OAAO,MAAMC,kBAAkB,GAAIT,KAAD,IAAsBA,KAAK,CAACU,QAAN,CAAef,IAAhE,C,CAEP;;AACA,MAAMgB,eAAe,GAAGf,aAAa,CAACgB,OAAtC;AACA,eAAeD,eAAf","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { Category, DataResponse } from 'models';\r\n\r\nexport interface CategoryState {\r\n    loading: boolean;\r\n    list: Category[];\r\n}\r\n\r\nconst initialState: CategoryState = {\r\n    loading: false,\r\n    list: [],\r\n}\r\n\r\nconst categorySlice = createSlice({\r\n    name: 'category',\r\n    initialState,\r\n    reducers: {\r\n        fetchCategoryList(state){\r\n            state.loading = true;\r\n        },\r\n        fetchCategoryListSuccess(state, action: PayloadAction<DataResponse<Category>>){\r\n            state.loading = true;\r\n            state.list = action.payload.content.data;\r\n        },\r\n        fetchCategoryListFailed(state, action: PayloadAction<string>){\r\n            state.loading = false;\r\n        },\r\n    }\r\n});\r\n\r\n// Actions\r\nexport const categoryAction = categorySlice.actions;\r\n\r\n// Selector\r\nexport const selectCategoryList = (state: RootState) => state.category.list;\r\n\r\n// Reducers\r\nconst categoryReducer = categorySlice.reducer;\r\nexport default categoryReducer;"]},"metadata":{},"sourceType":"module"}