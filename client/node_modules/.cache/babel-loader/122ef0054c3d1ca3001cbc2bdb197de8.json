{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\APP\\\\client\\\\src\\\\features\\\\posts\\\\pages\\\\AddEditPostPage.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Fab, makeStyles } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\nimport postApi from 'api/postApi';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useHistory, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PostForm from '../components/PostForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexFlow: 'row nowrap',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  fab: {\n    position: 'fixed',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\nexport default function AddEditPostPage() {\n  _s();\n\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    postId\n  } = useParams();\n  const [post, setPost] = useState();\n  const isEdit = Boolean(postId);\n  useEffect(() => {\n    if (!isEdit) return;\n\n    (async () => {\n      try {\n        const response = await postApi.getPostById(postId);\n\n        if (response.success) {\n          setPost(response.content.data);\n        } else {\n          toast.error(response.content.message);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }, [postId]);\n  const initialValue = {\n    title: '',\n    content: '',\n    author: '',\n    like: 0,\n    category: '',\n    imageUrl: '',\n    ...post\n  };\n\n  const handleSubmitForm = async formValue => {\n    if (isEdit) {\n      await postApi.update(formValue);\n    } else {\n      await postApi.add(formValue);\n    }\n\n    toast.success('Save post successfully.');\n    history.push('/home/post');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [(!isEdit || Boolean(post)) && /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        isEdit: isEdit,\n        initialValue: initialValue,\n        onSubmit: handleSubmitForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      style: {\n        textDecoration: 'none'\n      },\n      to: \"/home/post\",\n      children: /*#__PURE__*/_jsxDEV(Fab, {\n        className: classes.fab,\n        color: \"primary\",\n        size: \"large\",\n        variant: \"extended\",\n        children: [' ', /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" Back to post\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditPostPage, \"iy782TxYJxIViPbI1G1neCXvZsk=\", false, function () {\n  return [useStyles, useHistory, useParams];\n});\n\n_c = AddEditPostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditPostPage\");","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/posts/pages/AddEditPostPage.tsx"],"names":["Box","Fab","makeStyles","ArrowBack","postApi","React","useEffect","useState","Link","useHistory","useParams","toast","PostForm","useStyles","theme","root","display","flexFlow","justifyContent","alignItems","fab","position","bottom","spacing","right","AddEditPostPage","classes","history","postId","post","setPost","isEdit","Boolean","response","getPostById","success","content","data","error","message","console","log","initialValue","title","author","like","category","imageUrl","handleSubmitForm","formValue","update","add","push","textDecoration"],"mappings":"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","sourcesContent":["import { Box, Fab, makeStyles } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport postApi from 'api/postApi';\r\nimport { DataResponse, Post } from 'models';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport PostForm from '../components/PostForm';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'row nowrap',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport default function AddEditPostPage() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const { postId } = useParams<{ postId: string }>();\r\n  const [post, setPost] = useState<Post>();\r\n\r\n  const isEdit = Boolean(postId);\r\n\r\n  useEffect(() => {\r\n    if (!isEdit) return;\r\n    (async () => {\r\n      try {\r\n        const response: DataResponse<Post> = await postApi.getPostById(postId);\r\n        if (response.success) {\r\n          setPost(response.content.data);\r\n        } else {\r\n          toast.error(response.content.message);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    })();\r\n  }, [postId]);\r\n\r\n  const initialValue: Post = {\r\n    title: '',\r\n    content: '',\r\n    author: '',\r\n    like: 0,\r\n    category: '',\r\n    imageUrl: '',\r\n    ...post,\r\n  } as Post;\r\n\r\n  const handleSubmitForm = async (formValue: Post) => {\r\n    if (isEdit) {\r\n      await postApi.update(formValue);\r\n    } else {\r\n      await postApi.add(formValue);\r\n    }\r\n    toast.success('Save post successfully.');\r\n    history.push('/home/post');\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      {(!isEdit || Boolean(post)) && (\r\n        <Box>\r\n          <PostForm isEdit={isEdit} initialValue={initialValue} onSubmit={handleSubmitForm} />\r\n        </Box>\r\n      )}\r\n\r\n      <Link style={{ textDecoration: 'none' }} to=\"/home/post\">\r\n        <Fab className={classes.fab} color=\"primary\" size=\"large\" variant=\"extended\">\r\n          {' '}\r\n          <ArrowBack /> Back to post\r\n        </Fab>\r\n      </Link>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}