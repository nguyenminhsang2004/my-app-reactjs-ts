{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  loading: false,\n  list: []\n};\nconst postSlice = createSlice({\n  name: 'post',\n  initialState,\n  reducers: {\n    fetchPostList(state) {\n      state.loading = true;\n    },\n\n    fetchPostListSuccess(state, action) {\n      state.loading = false;\n      state.list = action.payload.content.data;\n    },\n\n    fetchPostListFailed(state, action) {\n      state.loading = false;\n    }\n\n  }\n}); // Actions\n\nexport const postAction = postSlice.actions; // Selector\n\nexport const selectPostLoading = state => state.post.loading;\nexport const selectPostList = state => state.post.list; // Reducers\n\nconst postReducer = postSlice.reducer;\nexport default postReducer;","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/posts/postSlice.ts"],"names":["createSlice","initialState","loading","list","postSlice","name","reducers","fetchPostList","state","fetchPostListSuccess","action","payload","content","data","fetchPostListFailed","postAction","actions","selectPostLoading","post","selectPostList","postReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AASA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,OAAO,EAAE,KADmB;AAE5BC,EAAAA,IAAI,EAAE;AAFsB,CAAhC;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BJ,EAAAA,YAF0B;AAG1BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAO;AAChBA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACH,KAHK;;AAINO,IAAAA,oBAAoB,CAACD,KAAD,EAAQE,MAAR,EAAkD;AAClEF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAaO,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuBC,IAApC;AACH,KAPK;;AAQNC,IAAAA,mBAAmB,CAACN,KAAD,EAAQE,MAAR,EAAsC;AACrDF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACH;;AAVK;AAHgB,CAAD,CAA7B,C,CAkBA;;AACA,OAAO,MAAMa,UAAU,GAAGX,SAAS,CAACY,OAA7B,C,CAEP;;AACA,OAAO,MAAMC,iBAAiB,GAAIT,KAAD,IAAsBA,KAAK,CAACU,IAAN,CAAWhB,OAA3D;AACP,OAAO,MAAMiB,cAAc,GAAIX,KAAD,IAAsBA,KAAK,CAACU,IAAN,CAAWf,IAAxD,C,CAEP;;AACA,MAAMiB,WAAW,GAAGhB,SAAS,CAACiB,OAA9B;AACA,eAAeD,WAAf","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { DataResponse, Post } from 'models';\r\n\r\nexport interface PostState {\r\n    loading: boolean;\r\n    list: Post[]; \r\n}\r\n\r\nconst initialState: PostState = {\r\n    loading: false,\r\n    list: []\r\n}\r\n\r\nconst postSlice = createSlice({\r\n    name: 'post',\r\n    initialState,\r\n    reducers: {\r\n        fetchPostList(state){\r\n            state.loading = true;\r\n        },\r\n        fetchPostListSuccess(state, action: PayloadAction<DataResponse<Post>>){\r\n            state.loading = false;\r\n            state.list = action.payload.content.data;\r\n        },\r\n        fetchPostListFailed(state, action: PayloadAction<string>){\r\n            state.loading = false;\r\n        },\r\n    }\r\n});\r\n\r\n\r\n// Actions\r\nexport const postAction = postSlice.actions;\r\n\r\n// Selector\r\nexport const selectPostLoading = (state: RootState) => state.post.loading;\r\nexport const selectPostList = (state: RootState) => state.post.list;\r\n\r\n// Reducers\r\nconst postReducer = postSlice.reducer;\r\nexport default postReducer;"]},"metadata":{},"sourceType":"module"}