{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\APP\\\\client\\\\src\\\\components\\\\FormFields\\\\RandomImageField.tsx\",\n    _s = $RefreshSig$();\n\nimport { Box, Button } from '@material-ui/core';\nimport React from 'react';\nimport { useController } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRandomImageUrl = () => {\n  const randomId = Math.trunc(Math.random() * 2000);\n  return `https://picsum.photos/id/${randomId}/600/300`;\n};\n\nexport function RandomImageField({\n  name,\n  control,\n  label,\n  disabled,\n  ...inputProps\n}) {\n  _s();\n\n  const {\n    field: {\n      value,\n      onBlur,\n      onChange\n    }\n  } = useController({\n    name,\n    control\n  });\n\n  const handleRandomPhotoClick = async () => {\n    if (onChange) {\n      const randomImageUrl = getRandomImageUrl();\n      onChange(randomImageUrl);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: handleRandomPhotoClick,\n        onBlur: onBlur,\n        children: \"Random image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      children: value && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: value,\n        alt: \"Ooops ... not found. Please click random again!\",\n        onError: handleRandomPhotoClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RandomImageField, \"jB7ZVsuIjxG48IUF5bZoaYYs2tg=\", false, function () {\n  return [useController];\n});\n\n_c = RandomImageField;\n\nvar _c;\n\n$RefreshReg$(_c, \"RandomImageField\");","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/components/FormFields/RandomImageField.tsx"],"names":["Box","Button","React","useController","getRandomImageUrl","randomId","Math","trunc","random","RandomImageField","name","control","label","disabled","inputProps","field","value","onBlur","onChange","handleRandomPhotoClick","randomImageUrl"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAkBC,aAAlB,QAAuC,iBAAvC;;;AAUA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAjB;AACA,SAAQ,4BAA2BH,QAAS,UAA5C;AACD,CAHD;;AAKA,OAAO,SAASI,gBAAT,CAA2B;AAACC,EAAAA,IAAD;AAAOC,EAAAA,OAAP;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,QAAvB;AAAiC,KAAGC;AAApC,CAA3B,EAAmG;AAAA;;AACxG,QAAM;AACJC,IAAAA,KAAK,EAAE;AAACC,MAAAA,KAAD;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA;AAAhB;AADH,MAEFf,aAAa,CAAC;AAChBO,IAAAA,IADgB;AAEhBC,IAAAA;AAFgB,GAAD,CAFjB;;AAOA,QAAMQ,sBAAsB,GAAG,YAAY;AACzC,QAAGD,QAAH,EAAY;AACV,YAAME,cAAc,GAAGhB,iBAAiB,EAAxC;AACAc,MAAAA,QAAQ,CAACE,cAAD,CAAR;AACD;AAEF,GAND;;AAQA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,GAAD;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,OAAO,EAAED,sBAHX;AAIE,QAAA,MAAM,EAAEF,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,gBACGD,KAAK,iBACN;AACE,QAAA,GAAG,EAAEA,KADP;AAEE,QAAA,GAAG,EAAC,iDAFN;AAGE,QAAA,OAAO,EAAEG;AAHX;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAtCeV,gB;UAGVN,a;;;KAHUM,gB","sourcesContent":["import { Box, Button } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { Control, useController } from 'react-hook-form';\r\n\r\n\r\nexport interface RandomImageFieldProps {\r\n  name: string;\r\n  control: Control<any>;\r\n  label?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst getRandomImageUrl = () => {\r\n  const randomId = Math.trunc(Math.random() * 2000);\r\n  return `https://picsum.photos/id/${randomId}/600/300`;\r\n}\r\n\r\nexport function RandomImageField ({name, control, label, disabled, ...inputProps}: RandomImageFieldProps) {\r\n  const {\r\n    field: {value, onBlur, onChange},\r\n  } = useController({\r\n    name,\r\n    control\r\n  });\r\n\r\n  const handleRandomPhotoClick = async () => {\r\n    if(onChange){\r\n      const randomImageUrl = getRandomImageUrl();\r\n      onChange(randomImageUrl);\r\n    }\r\n    \r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={handleRandomPhotoClick}\r\n          onBlur={onBlur}\r\n        >\r\n          Random image\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        {value && (\r\n        <img \r\n          src={value} \r\n          alt=\"Ooops ... not found. Please click random again!\" \r\n          onError={handleRandomPhotoClick}\r\n        />)}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}