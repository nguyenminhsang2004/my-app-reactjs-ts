{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  loading: false,\n  noteList: []\n};\nconst noteSlice = createSlice({\n  name: 'note',\n  initialState,\n  reducers: {\n    fetchNoteList(state) {\n      state.loading = true;\n    },\n\n    fetchNoteListSuccess(state, action) {\n      state.loading = false;\n      state.noteList = action.payload.content.data;\n    },\n\n    fetchNoteListFailed(state, action) {\n      state.loading = false;\n    }\n\n  }\n}); // Action\n\nexport const noteAction = noteSlice.actions; // Selector\n\nexport const selectNoteLoading = state => state.note.loading;\nexport const selectNoteList = state => state.note.noteList; // Reducer\n\nconst noteReducer = noteSlice.reducer;\nexport default noteReducer;","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/note/noteSlice.ts"],"names":["createSlice","initialState","loading","noteList","noteSlice","name","reducers","fetchNoteList","state","fetchNoteListSuccess","action","payload","content","data","fetchNoteListFailed","noteAction","actions","selectNoteLoading","note","selectNoteList","noteReducer","reducer"],"mappings":"AACA,SAASA,WAAT,QAA4B,kBAA5B;AAQA,MAAMC,YAAuB,GAAG;AAC9BC,EAAAA,OAAO,EAAE,KADqB;AAE9BC,EAAAA,QAAQ,EAAE;AAFoB,CAAhC;AAKA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,MADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,aAAa,CAACC,KAAD,EAAO;AAChBA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACH,KAHO;;AAIRO,IAAAA,oBAAoB,CAACD,KAAD,EAAQE,MAAR,EAAkD;AAClEF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACL,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeC,OAAf,CAAuBC,IAAxC;AACH,KAPO;;AAQRC,IAAAA,mBAAmB,CAACN,KAAD,EAAQE,MAAR,EAAsC;AACrDF,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACH;;AAVO;AAHkB,CAAD,CAA7B,C,CAiBA;;AACA,OAAO,MAAMa,UAAU,GAAGX,SAAS,CAACY,OAA7B,C,CACP;;AACA,OAAO,MAAMC,iBAAiB,GAAIT,KAAD,IAAsBA,KAAK,CAACU,IAAN,CAAWhB,OAA3D;AACP,OAAO,MAAMiB,cAAc,GAAIX,KAAD,IAAsBA,KAAK,CAACU,IAAN,CAAWf,QAAxD,C,CACP;;AACA,MAAMiB,WAAW,GAAGhB,SAAS,CAACiB,OAA9B;AACA,eAAeD,WAAf","sourcesContent":["import { RootState } from 'app/store'\r\nimport { createSlice } from '@reduxjs/toolkit'\r\nimport { Note } from 'models'\r\n\r\nexport interface NoteState {\r\n  loading: boolean\r\n  noteList: Note[]\r\n}\r\n\r\nconst initialState: NoteState = {\r\n  loading: false,\r\n  noteList: [],\r\n}\r\n\r\nconst noteSlice = createSlice({\r\n  name: 'note',\r\n  initialState,\r\n  reducers: {\r\n    fetchNoteList(state){\r\n        state.loading = true;\r\n    },\r\n    fetchNoteListSuccess(state, action: PayloadAction<ListResponse<Post>>){\r\n        state.loading = false;\r\n        state.noteList = action.payload.content.data;\r\n    },\r\n    fetchNoteListFailed(state, action: PayloadAction<string>){\r\n        state.loading = false;\r\n    },\r\n  },\r\n})\r\n\r\n// Action\r\nexport const noteAction = noteSlice.actions\r\n// Selector\r\nexport const selectNoteLoading = (state: RootState) => state.note.loading\r\nexport const selectNoteList = (state: RootState) => state.note.noteList\r\n// Reducer\r\nconst noteReducer = noteSlice.reducer\r\nexport default noteReducer\r\n"]},"metadata":{},"sourceType":"module"}