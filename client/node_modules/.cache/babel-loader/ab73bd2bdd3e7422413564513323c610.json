{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACTJS\\\\App\\\\client\\\\src\\\\features\\\\posts\\\\components\\\\PostForm.tsx\",\n    _s = $RefreshSig$();\n\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { Box, Button, CircularProgress, makeStyles, Typography } from '@material-ui/core';\nimport { InputField } from 'components/FormFields';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst schema = yup.object().shape({});\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  title: {\n    textAlign: 'center',\n    textTransform: 'uppercase'\n  },\n  button: {\n    textAlign: 'center',\n    ma\n  }\n}));\nexport default function PostForm({\n  initialValue,\n  onSubmit,\n  isEdit\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    control,\n    handleSubmit,\n    formState: {\n      isSubmitting\n    }\n  } = useForm({\n    defaultValues: initialValue,\n    resolver: yupResolver(schema)\n  });\n\n  const handleSubmitForm = async formValue => {\n    try {\n      console.log(formValue);\n      await (onSubmit === null || onSubmit === void 0 ? void 0 : onSubmit(formValue));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: 600,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"h4\",\n      children: isEdit ? 'Update post info' : 'Add new post'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleSubmitForm),\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        name: \"title\",\n        control: control,\n        label: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"content\",\n        control: control,\n        label: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputField, {\n        name: \"imageUrl\",\n        control: control,\n        label: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.button,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: isSubmitting,\n          children: [isSubmitting && /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20,\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 42\n          }, this), \" Save\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostForm, \"Asg6auVEFW/hG+BrWc2RweXUgrw=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["D:/REACTJS/App/client/src/features/posts/components/PostForm.tsx"],"names":["yupResolver","Box","Button","CircularProgress","makeStyles","Typography","InputField","React","useForm","yup","schema","object","shape","useStyles","theme","root","title","textAlign","textTransform","button","ma","PostForm","initialValue","onSubmit","isEdit","classes","control","handleSubmit","formState","isSubmitting","defaultValues","resolver","handleSubmitForm","formValue","console","log","error"],"mappings":"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","sourcesContent":["import { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Box, Button, CircularProgress, makeStyles, Typography } from '@material-ui/core';\r\nimport { InputField } from 'components/FormFields';\r\nimport { Post } from 'models';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as yup from \"yup\";\r\n\r\nconst schema = yup.object().shape({\r\n    \r\n});\r\n\r\nexport interface PostFormProps {\r\n    initialValue: Post;\r\n    onSubmit: (formValue: Post) => void;\r\n    isEdit: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n\r\n    },\r\n\r\n    title: {\r\n        textAlign: 'center',\r\n        textTransform: 'uppercase',\r\n    },\r\n    button: {\r\n        textAlign: 'center',\r\n        ma\r\n    }\r\n}))\r\n\r\nexport default function PostForm ({initialValue, onSubmit, isEdit}: PostFormProps) {\r\n    const classes = useStyles();\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        formState: {isSubmitting}\r\n    } = useForm<Post>({\r\n        defaultValues: initialValue,\r\n        resolver: yupResolver(schema)\r\n    });\r\n\r\n    const handleSubmitForm = async (formValue: Post) => {\r\n        try {\r\n            console.log(formValue);\r\n            await onSubmit?.(formValue);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Box maxWidth={600}>\r\n            <Typography className={classes.title} variant=\"h4\">\r\n                {isEdit ? 'Update post info' : 'Add new post'}\r\n            </Typography>\r\n            <form onSubmit={handleSubmit(handleSubmitForm)}>\r\n                <InputField name=\"title\" control={control} label=\"Title\"/>\r\n                <InputField name=\"content\" control={control} label=\"Content\"/>\r\n                <InputField name=\"imageUrl\" control={control} label=\"Image\"/>\r\n\r\n                <Box className={classes.button}>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={isSubmitting}>\r\n                        {isSubmitting && <CircularProgress size={20} color=\"primary\"/>} Save\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}