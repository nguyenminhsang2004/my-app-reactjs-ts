{"ast":null,"code":"import { all, call, put, takeLatest } from '@redux-saga/core/effects';\nimport dashboardApi from 'api/dashboardApi';\nimport { dashboardAction } from './dashboardSlice';\n\nfunction* fetchStatistics() {\n  const response = yield call(dashboardApi.getStatistics);\n\n  if (response.success) {\n    const [postCount, likeCount, noteCount, order];\n    yield put(dashboardAction.setStatistics());\n  }\n}\n\nfunction* fetchDataDashboard() {\n  try {\n    yield all([call(fetchStatistics)]);\n  } catch (error) {\n    console.log(error);\n    yield put(dashboardAction.fetchDataFailed('Failed to fetch data statistics'));\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(dashboardAction.fetchData.type, fetchDataDashboard);\n}","map":{"version":3,"sources":["D:/REACTJS/APP/client/src/features/dashboard/dashboardSaga.ts"],"names":["all","call","put","takeLatest","dashboardApi","dashboardAction","fetchStatistics","response","getStatistics","success","postCount","likeCount","noteCount","order","setStatistics","fetchDataDashboard","error","console","log","fetchDataFailed","dashboardSaga","fetchData","type"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,UAAzB,QAA2C,0BAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,UAAUC,eAAV,GAA2B;AAEvB,QAAMC,QAAgC,GAAG,MAAMN,IAAI,CAACG,YAAY,CAACI,aAAd,CAAnD;;AAEA,MAAGD,QAAQ,CAACE,OAAZ,EAAoB;AAChB,UAAM,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,SAAvB,EAAkCC,KAAlC,CAAN;AACA,UAAMX,GAAG,CAACG,eAAe,CAACS,aAAhB,EAAD,CAAT;AACH;AACJ;;AAED,UAAUC,kBAAV,GAA+B;AAC3B,MAAI;AACA,UAAMf,GAAG,CAAC,CACNC,IAAI,CAACK,eAAD,CADE,CAAD,CAAT;AAGH,GAJD,CAIE,OAAOU,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMd,GAAG,CAACG,eAAe,CAACc,eAAhB,CAAgC,iCAAhC,CAAD,CAAT;AACH;AACJ;;AAED,eAAe,UAAUC,aAAV,GAA0B;AACvC,QAAMjB,UAAU,CAACE,eAAe,CAACgB,SAAhB,CAA0BC,IAA3B,EAAiCP,kBAAjC,CAAhB;AACD","sourcesContent":["import { all, call, put, takeLatest } from '@redux-saga/core/effects'\r\nimport dashboardApi from 'api/dashboardApi'\r\nimport { ListResponseStatistics } from 'models'\r\nimport { dashboardAction } from './dashboardSlice'\r\n\r\nfunction* fetchStatistics(){\r\n\r\n    const response: ListResponseStatistics = yield call(dashboardApi.getStatistics)\r\n\r\n    if(response.success){\r\n        const [postCount, likeCount, noteCount, order]\r\n        yield put(dashboardAction.setStatistics())\r\n    }\r\n}\r\n\r\nfunction* fetchDataDashboard() {\r\n    try {\r\n        yield all([\r\n            call(fetchStatistics),\r\n        ])\r\n    } catch (error) {\r\n        console.log(error)\r\n        yield put(dashboardAction.fetchDataFailed('Failed to fetch data statistics'))\r\n    }\r\n}\r\n\r\nexport default function* dashboardSaga() {\r\n  yield takeLatest(dashboardAction.fetchData.type, fetchDataDashboard)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}